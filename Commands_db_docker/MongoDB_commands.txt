
sudo service mongod restart

sudo systemctl status mongod
sudo systemctl stop mongod


initial se ruleaza "sudo service mongod restart" din terminal
se ruleaza "mongosh" din terminal pentru a deschide baza de date
# mongosh

pentru a intra in baza de date se mai poate folosi comanda "mongo" , insa metoda este deprecated si va fi stearsa
# mongo


//* ---------------

Daca pornesc container-ul docker ce are versiunea 4.4, apoi pun in terminal comanda "mongosh" imi va deschide versiunea 4.4 (cea de container"
In schimb daca container-ul este inchis si rulez comanda "mongosh", dupa un eventual "sudo service mongod restart" imi va deschide versiunea 5.0.3
Pentru a deschide din nou containerul trebuie sa inchid versiunea 5.0.3 cu comanda "sudo systemctl stop mongod"

//* --------------


http://localhost:27017/             // mongo port


// trebuie sa fii in tabela admin
// folosim comanda "use admin;" inainte de adaugarea noului user; 
db.createUser({user: "root_mongo", pwd:"root_mongo", roles:[{role:"userAdminAnyDatabase", db:"admin"}]  })

// trebuie sa fii in baza de date bookorders
// folosim comanda "use bookorders;" inainte de adaugarea noului user; 
db.createUser({user: "db_manager", pwd:"db_manager", roles:[{role:"dbOwner", db:"bookorders"}]  })

db.createUser({user: "web_user", pwd:"web_user", roles:[{role:"readWrite", db:"bookorders"}]  })


// trebuie sa fii in baza de date in care este user-ul
db.dropUser("root_mongo")



db.getName()            // returneaza numele bazei de date pe care lucrez 
db.getUsers()
show users; 


show dbs                            // afiseaza bazele de date existente
show databases                      // afiseaza bazele de date existente

use test                            // foloseste baza de date "test"
show collections                    // afiseaza tabelele(colectiile) din baza de date
db.createCollection("students")         // creaza tabela "studenti"
db.students.insert({"name":"Alice", "age":"20"})    // insereaza date in colectia "students"
db.students.find()                   // afiseaza toate inregistrarile din tabela "students"
db.students.find({name:"Alex"})      // afiseaza inregistrarile care au campul name=="Alex"   
db.students.drop();                 // sterge colectia "students"
db.students.remove({});             // 

-- pt a sterge o baza de date
use orders;
db.dropDatabase();



db.client_1.insert({"id":"1", "firstName": "help", "lastName": "mepls"})





